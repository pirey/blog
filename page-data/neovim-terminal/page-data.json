{"componentChunkName":"component---src-templates-blog-post-js","path":"/neovim-terminal/","result":{"data":{"site":{"siteMetadata":{"title":"Yeri's Digital Note"}},"markdownRemark":{"id":"dff1891b-7cbb-5d55-ac2d-c38f2d79bc87","excerpt":"Previously I’ve been using neovim alongside tmux for spinning up quick terminal session. But when I open new tmux pane or window, the layout of my screen is…","html":"<p>Previously I’ve been using neovim alongside tmux for spinning up quick terminal session. But when I open new tmux pane or window, the layout of my screen is changed and it is kinda break my state of focus when writing code. I find it more pleasant to open terminal inside neovim directly as it doesn’t change my current focus. I feel that I don’t loose control of the things I’m working on.</p>\n<p>The basic command to open built-in terminal is <code class=\"language-text\">:terminal</code>, but it just open it on current buffer, which drags my attention away from the code I’m working, which is a no.</p>\n<p>I want to open new terminal in a new split. I tried to mimic the behavior of vscode built-in terminal, that is to open new terminal at the bottom of the screen.</p>\n<p>Basically I need to open new split, at the bottom of the screen, and call the terminal command. I also choose to create new command to do the thing.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">command<span class=\"token operator\">!</span> Term <span class=\"token punctuation\">:</span>bot <span class=\"token keyword\">sp</span> | <span class=\"token builtin\">term</span></code></pre></div>\n<p>I can also make new mapping for quicker action, but thinking about which key to use to trigger the thing is kinda time consuming and I don’t wanna think too much about it right now, so I’ll just use the command for a while.</p>\n<p>Also, when opening a new terminal, the default mode is <code class=\"language-text\">normal</code> mode, but when I open a terminal usually I want to just run a one time command, e.g. I need to run a test, or starting dev server, etc.</p>\n<p>So I create new autocommand to automatically start insert mode when I open new terminal.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token builtin\">autocmd</span> TermOpen <span class=\"token builtin\">term</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token operator\">*</span> <span class=\"token keyword\">startinsert</span></code></pre></div>\n<p>The last thing I want to mention is, to scroll output of the terminal, I need to enter the <code class=\"language-text\">normal</code> mode of the terminal, the default keymap is <code class=\"language-text\">&lt;c-\\&gt;&lt;c-n&gt;</code> which is definitely awkward, so I came up with more sane adjustment.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">tnoremap <span class=\"token operator\">&lt;</span>Esc<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>C<span class=\"token operator\">-</span>\\<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>C<span class=\"token operator\">-</span><span class=\"token keyword\">n</span><span class=\"token operator\">></span></code></pre></div>\n<p>But because I also use fzf, I don’t want to remap the escape key when I’m opening fzf buffer. So I tweak it a little bit.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">tnoremap <span class=\"token operator\">&lt;</span>expr<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>Esc<span class=\"token operator\">></span> &amp;<span class=\"token builtin\">ft</span> <span class=\"token operator\">==</span> <span class=\"token string\">'fzf'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'&lt;Esc>'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;C-\\>&lt;C-n>'</span></code></pre></div>\n<p>Now I can move around pretty easily.</p>\n<p>Nice.</p>","frontmatter":{"title":"Neovim terminal","date":"December 28, 2020","description":"My custom setup for using built-in neovim terminal"}}},"pageContext":{"slug":"/neovim-terminal/","previous":{"fields":{"slug":"/docker-oversimplified/"},"frontmatter":{"title":"Docker Oversimplified"}},"next":{"fields":{"slug":"/customizing-nvim-telescope/"},"frontmatter":{"title":"Customizing telescope.nvim"}}}},"staticQueryHashes":["2841359383"]}